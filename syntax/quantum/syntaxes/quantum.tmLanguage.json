{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "quantum",
	"patterns": [
		{ "include": "#comments" },
		{ "include": "#multilineComments" },
		{ "include": "#keywords" },
		{ "include": "#annotation" },
		{ "include": "#namespace" },
		{ "include": "#functionCall" },
		{ "include": "#strings"},
		{ "include": "#characters"},
		{ "include": "#integers"},
		{ "include": "#floats"},
		{ "include": "#booleans"},
		{ "include": "#classNames"},
		{ "include": "#datatypes"},
		{ "include": "#identifiers"}
	],
	"repository": {
		"comments": {
			"patterns": [{
				"name": "comment.line.double-slash.quantum",
				"match": "//.*$"
			}]
		},
		"multilineComments": {
			"patterns": [{
				"name": "comment.block.quantum",
				"begin": "/\\*",
				"end": "\\*/"
			}]
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.quantum",
				"match": "\\b(var|const|type|func|return|class|interface|override|implements|priv|prot|pub|static|enum|match|case|if|else|for|in|while|export|import|annotation|try|catch|finally|namespace|new)\\b"
			}]
		},
		"annotation": {
			"patterns": [{
				"name": "storage.type.annotation.quantum",
				"match": "\\b(@[a-zA-Z_][a-zA-Z0-9_]*)\\b"
			}]
		},
		"namespace": {
			"patterns": [{
				"name": "entity.name.namespace.quantum",
				"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*\\.)+"
			}]
		},
		"functionCall": {
			"patterns": [{
				"name": "entity.name.function.quantum",
				"match": "\\b([a-z_][a-zA-Z0-9_]*)\\("
			}]
		},
		"classNames": {
			"patterns": [{
				"name": "entity.name.class.quantum",
				"match": "\\b([A-Z][a-zA-Z0-9_]*)\\b"
			}]
		},
		"datatypes": {
			"patterns": [{
				"name": "storage.type.quantum",
				"match": "\\b(Int|String|Float|Char|Bool|Array|Map|Any)\\b"
			}]
		},
		"identifiers": {
			"patterns": [{
				"name": "entity.name.function.quantum",
				"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b"
			}]
		},
		"strings": {
			"patterns": [{
				"name": "string.quoted.double.quantum",
				"begin": "\"",
				"end": "\"",
				"patterns": [
					{
						"name": "constant.character.escape.quantum",
						"match": "\\\\."
					},
					{
						"name": "constant.character.escape.quantum",
						"match": "\\$[a-zA-Z_][a-zA-Z0-9_]*"
					}
				]
			}]
		},
		"characters": {
			"patterns": [{
				"name": "string.quoted.single.quantum",
				"begin": "'",
				"end": "'",
				"patterns": [{
					"name": "constant.character.escape.quantum",
					"match": "\\\\."
				}]
			}]
		},
		"integers": {
			"patterns": [{
				"name": "constant.numeric.integer.quantum",
				"match": "\\b([0-9]+)\\b"
			}]
		},
		"floats": {
			"patterns": [{
				"name": "constant.numeric.float.quantum",
				"match": "\\b([0-9]+\\.[0-9]+)\\b"
			}]
		},
		"booleans": {
			"patterns": [{
				"name": "constant.language.boolean.quantum",
				"match": "\\b(true|false)\\b"
			}]
		}
	},
	"scopeName": "main.qt"
}